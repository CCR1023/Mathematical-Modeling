%%清空环境变量
clc
clear

%原始数据
%人数(单位：万人)
sqrs=[20.55 22.44 25.37 27.13 29.45 30.10 30.96 34.06 36.42 38.09 39.13 39.99 ...
    41.93 44.59 47.30 52.89 55.73 56.76 59.17 60.63];
%机动车数(单位：万辆)
sqjdcs=[0.6 0.75 0.85 0.9 1.05 1.35 1.45 1.6 1.7 1.85 2.15 2.2 2.25 2.35 2.5 2.6...
    2.7 2.85 2.95 3.1];
%公路面积(单位：万平方公里)
sqglmj=[0.09 0.11 0.11 0.14 0.20 0.23 0.23 0.32 0.32 0.34 0.36 0.36 0.38 0.49 ...
    0.56 0.59 0.59 0.67 0.69 0.79];
%公路客运量(单位：万人)
glkyl=[5126 6217 7730 9145 10460 11387 12353 15750 18304 19836 21024 19490 20433 ...
    22598 25107 33442 36836 40548 42927 43462];
%公路货运量(单位：万吨)
glhyl=[1237 1379 1385 1399 1663 1714 1834 4322 8132 8936 11099 11203 10524 11115 ...
    13320 16762 18673 20724 20803 21804];
p=[sqrs;sqjdcs;sqglmj];  %输入数据矩阵
t=[glkyl;glhyl];           %目标数据矩阵
% 利用mapminmax函数对数据进行归一化
[pn,input_str] = mapminmax(p) ;
[tn,output_str] = mapminmax(t) ;

%%网络建立和训练
%网络建立，输入为[x1;x2]，输出为F。spread使用默认
net=newrbe(pn,tn,10);
%%网络的效果验证
%将原数据回带，测试网络效果
ty=sim(net,pn);
ty = mapminmax('reverse',ty,output_str);
x = 1:length(t);
%%使用图像来看网络对非线性函数的拟合效果
plot(x,t(1,:),'r-o',x,ty(1,:),'b--+')

% 预测
pnew=[
    73.39 75.55
    3.9635 4.0975
    0.9880 1.0268
    ];
%归一化
pnew = mapminmax('apply',pnew,input_str);
tnew = sim(net,pnew);
% 去归一化
tnew = mapminmax('reverse',tnew,output_str)
%    1.0e+04 *
% 
%    1.011467617013892   1.011467617013892
%    0.170744309548920   0.170744309548920
